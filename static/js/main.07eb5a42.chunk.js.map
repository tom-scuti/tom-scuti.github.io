{"version":3,"sources":["contexts/EthContext/EthContext.js","contexts/EthContext/state.js","contexts/EthContext/EthProvider.jsx","contexts/EthContext/useEth.js","components/Intro/Welcome.jsx","components/Intro/Tree.jsx","components/Intro/Desc.jsx","components/Intro/index.jsx","App.jsx","index.js"],"names":["EthContext","createContext","actions","initialState","artifact","web3","accounts","networkID","contract","reducer","state","action","type","data","Error","EthProvider","children","useReducer","dispatch","init","useCallback","Web3","givenProvider","eth","requestAccounts","net","getId","abi","address","networks","Contract","err","console","error","useEffect","tryInit","require","events","handleChange","forEach","e","window","ethereum","on","removeListener","Provider","value","useEth","useContext","Welcome","className","Tree","useState","num","setNum","getCount","methods","call","count","log","increase","send","from","decrease","addonBefore","MinusOutlined","onClick","addonAfter","PlusOutlined","Desc","href","target","rel","Intro","App","id","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.07eb5a42.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst EthContext = createContext();\n\nexport default EthContext;\n","const actions = {\n  init: \"INIT\",\n};\n\nconst initialState = {\n  artifact: null,\n  web3: null,\n  accounts: null,\n  networkID: null,\n  contract: null\n};\n\nconst reducer = (state, action) => {\n  const { type, data } = action;\n  switch (type) {\n    case actions.init:\n      return { ...state, ...data };\n    default:\n      throw new Error(\"Undefined reducer action type\");\n  }\n};\n\nexport {\n  actions,\n  initialState,\n  reducer\n};\n","import React, { useReducer, useCallback, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\n\nfunction EthProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const init = useCallback(\n    async artifact => {\n      if (artifact) {\n        const web3 = new Web3(Web3.givenProvider || \"ws://127.0.0.1:9545\");\n        const accounts = await web3.eth.requestAccounts();\n        const networkID = await web3.eth.net.getId();\n        const { abi } = artifact;\n        let address, contract;\n        try {\n          address = artifact.networks[networkID].address;\n          contract = new web3.eth.Contract(abi, address);\n        } catch (err) {\n          console.error(err);\n        }\n        dispatch({\n          type: actions.init,\n          data: { artifact, web3, accounts, networkID, contract }\n        });\n      }\n    }, []);\n\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/CountNumber.json\");\n        init(artifact);\n      } catch (err) {\n        console.error('tryInit err',err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(state.artifact);\n    };\n\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifact]);\n\n  return (\n    <EthContext.Provider value={{\n      state,\n      dispatch\n    }}>\n      {children}\n    </EthContext.Provider>\n  );\n}\n\nexport default EthProvider;\n","import { useContext } from \"react\";\nimport EthContext from \"./EthContext\";\n\nconst useEth = () => useContext(EthContext);\n\nexport default useEth;\n","import useEth from \"../../contexts/EthContext/useEth\";\n\nfunction Welcome() {\n  const { state } = useEth()\n  return (\n    <div className=\"welcome\">\n      <h1>ðŸ‘‹ Welcome to the React Box!</h1>\n      <p>Your adress: {state?.accounts}</p>\n      \n    </div>\n  );\n}\n\nexport default Welcome;\n","import { InputNumber } from 'antd';\nimport { MinusOutlined, PlusOutlined } from '@ant-design/icons';\nimport { useState } from 'react'\nimport useEth from '../../contexts/EthContext/useEth';\nimport { useEffect } from 'react';\nfunction Tree() {\n  const { state } = useEth()\n  const [num, setNum] = useState(0)\n\n  const getCount = async () => {\n    const count = await state?.contract?.methods?.getCount().call();\n    console.log('count:', count)\n    setNum(count)\n  }\n  const increase = async () => {\n    await state?.contract?.methods?.increase().send({from: state?.accounts[0]})\n    getCount()\n  }\n  \n  const decrease = async () => {\n    await state?.contract?.methods?.decrease().send({from: state?.accounts[0]})\n    getCount()\n  }\n\n\n  const addonBefore = <MinusOutlined onClick={decrease} />\n  const addonAfter = <PlusOutlined onClick={increase} />\n  useEffect(() => {\n    getCount()\n  }, [state])\n  return (\n    <code>\n      <InputNumber addonBefore={addonBefore} addonAfter={addonAfter} value={num} />\n    </code>\n  );\n}\n\nexport default Tree;\n","function Desc() {\n  return (\n    <p>\n      This particular Box uses&nbsp;\n      <a href=\"https://github.com/ChainSafe/web3.js\" target=\"_blank\" rel=\"noreferrer\">\n        web3.js\n      </a>\n      , a popular Ethereum library.\n    </p>\n  );\n}\n\nexport default Desc;\n","import Welcome from \"./Welcome\";\nimport Tree from \"./Tree\";\nimport Desc from \"./Desc\";\n\nfunction Intro() {\n  return (\n    <>\n      <Welcome />\n      <Tree />\n      <Desc />\n    </>\n  );\n}\n\nexport default Intro;\n","import { EthProvider } from \"./contexts/EthContext\";\nimport Intro from \"./components/Intro/\";\nimport Setup from \"./components/Setup\";\nimport Demo from \"./components/Demo\";\nimport Footer from \"./components/Footer\";\nimport 'antd/dist/antd.css';\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <EthProvider>\n      <div id=\"App\" >\n        <div className=\"container\">\n          <Intro />\n          <hr />\n          {/* <Setup />\n          <hr />\n          <Demo />\n          <hr />\n          <Footer /> */}\n        </div>\n      </div>\n    </EthProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}